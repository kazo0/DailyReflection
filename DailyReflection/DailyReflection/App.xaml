<?xml version="1.0" encoding="utf-8" ?>
<Application xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
			 xmlns:converters="clr-namespace:DailyReflection.Converters"
             x:Class="DailyReflection.App">
	<Application.Resources>
		<Color x:Key="BarBackgroundColor">#1976D2</Color>

		<Color x:Key="BackgroundColorDark">#121212</Color>
		<Color x:Key="BackgroundColorLight">#EFF2F5</Color>

		<Color x:Key="TextPrimaryColorDark">#FFFFFF</Color>
		<Color x:Key="TextPrimaryColorLight">#323130</Color>

		<Style x:Key="BaseStyle"
			   TargetType="Element"
			   ApplyToDerivedTypes="True">
			<Setter Property="Shell.BackgroundColor"
            Value="{AppThemeBinding {StaticResource BarBackgroundColor}}" />
			<Setter Property="Shell.ForegroundColor"
            Value="{AppThemeBinding Dark={StaticResource TextPrimaryColorDark}, Light={StaticResource TextPrimaryColorLight}}" />
			<Setter Property="Shell.TabBarBackgroundColor"
            Value="{AppThemeBinding Dark={StaticResource BackgroundColorDark}, Light={StaticResource BackgroundColorLight}}" />
			<Setter Property="Shell.NavBarHasShadow"
            Value="false"/>
		</Style>

		<Style BasedOn="{StaticResource BaseStyle}"
           ApplyToDerivedTypes="True"
           TargetType="Tab" />

		<Style TargetType="Page" ApplyToDerivedTypes="True">
			<Setter Property="BackgroundColor" Value="{AppThemeBinding Dark={StaticResource BackgroundColorDark}, Light={StaticResource BackgroundColorLight}}"/>
		</Style>

		<Style TargetType="Label">
			<Setter Property="TextColor" Value="{AppThemeBinding Dark={StaticResource TextPrimaryColorDark}, Light={StaticResource TextPrimaryColorLight}}"/>
		</Style>

		<Style TargetType="TimePicker">
			<Setter Property="TextColor" Value="{AppThemeBinding Dark={StaticResource TextPrimaryColorDark}, Light={StaticResource TextPrimaryColorLight}}"/>
			<Setter Property="BackgroundColor" Value="Transparent"/>

			<Setter Property="VisualStateManager.VisualStateGroups">
				<VisualStateGroupList>
					<VisualStateGroup x:Name="CommonStates">
						<VisualState x:Name="Normal" />
						<VisualState x:Name="Disabled">
							<VisualState.Setters>
								<Setter Property="TextColor" Value="Gray"/>
							</VisualState.Setters>
						</VisualState>
					</VisualStateGroup>
				</VisualStateGroupList>
			</Setter>
		</Style>

		<Style TargetType="DatePicker">
			<Setter Property="TextColor" Value="{AppThemeBinding Dark={StaticResource TextPrimaryColorDark}, Light={StaticResource TextPrimaryColorLight}}"/>
			<Setter Property="BackgroundColor" Value="Transparent"/>

			<Setter Property="VisualStateManager.VisualStateGroups">
				<VisualStateGroupList>
					<VisualStateGroup x:Name="CommonStates">
						<VisualState x:Name="Normal" />
						<VisualState x:Name="Disabled">
							<VisualState.Setters>
								<Setter Property="TextColor" Value="Gray"/>
							</VisualState.Setters>
						</VisualState>
					</VisualStateGroup>
				</VisualStateGroupList>
			</Setter>
		</Style>

		<Style TargetType="Label" x:Key="PickerLabel">
			<Setter Property="TextColor">
				<Setter.Value>
					<OnPlatform>
						<On Platform="Android">Gray</On>
						<On Platform="iOS" Value="{AppThemeBinding Dark={StaticResource TextPrimaryColorDark}, Light={StaticResource TextPrimaryColorLight}}"/>
					</OnPlatform>
				</Setter.Value>
			</Setter>
			<Setter Property="VisualStateManager.VisualStateGroups">
				<VisualStateGroupList>
					<VisualStateGroup x:Name="CommonStates">
						<VisualState x:Name="Normal" />
						<VisualState x:Name="Disabled">
							<VisualState.Setters>
								<Setter Property="TextColor" Value="Gray"/>
							</VisualState.Setters>
						</VisualState>
					</VisualStateGroup>
				</VisualStateGroupList>
			</Setter>
		</Style>

		<OnPlatform x:Key="FaSolidFont"
		                x:TypeArguments="x:String">
			<On Platform="iOS" Value="FontAwesome5Free-Solid" />
			<On Platform="Android" Value="FontAwesomeSolid.otf#Regular" />
		</OnPlatform>

		<OnPlatform x:Key="FaRegularFont"
			            x:TypeArguments="x:String">
			<On Platform="iOS" Value="FontAwesome5Free-Regular" />
			<On Platform="Android" Value="FontAwesomeRegular.otf#Regular" />
		</OnPlatform>

		<OnPlatform x:Key="FaBrandsFont"
			            x:TypeArguments="x:String">
			<On Platform="iOS" Value="FontAwesome5Brands-Regular" />
			<On Platform="Android" Value="FontAwesomeBrands.otf#Regular" />
		</OnPlatform>
		<FontImage x:Key="ReflectionIcon"
		               FontFamily="{StaticResource FaSolidFont}"
		               Glyph="&#xf02d;" Size="22" />
		<FontImage x:Key="SettingsIcon"
			           FontFamily="{StaticResource FaSolidFont}"
			           Glyph="&#xf013;" Size="22" />
		<FontImage x:Key="ShareIcon"
			           FontFamily="{StaticResource FaSolidFont}"
			           Glyph="&#xf14d;" Size="22" />
		<FontImage x:Key="ClockIcon"
			           FontFamily="{StaticResource FaRegularFont}"
			           Glyph="&#xf017;" Size="22" />
		
		<converters:InverseBoolConverter x:Key="InverseBoolConverter"/>
		<converters:HasValueConverter x:Key="HasValueConverter" />
	</Application.Resources>
</Application>